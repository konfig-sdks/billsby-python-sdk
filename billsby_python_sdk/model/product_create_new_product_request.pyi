# coding: utf-8

"""
    Billsby API

    Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..

    The version of the OpenAPI document: 1.3.5
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from billsby_python_sdk import schemas  # noqa: F401


class ProductCreateNewProductRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            description = schemas.StrSchema
            name = schemas.StrSchema
            visibility = schemas.Int32Schema
            billingCurrency = schemas.StrSchema
            displayName = schemas.StrSchema
            isShippingAddressRequired = schemas.BoolSchema
            isShippingAddressValidationRequired = schemas.BoolSchema
            isBillingAddressValidationRequired = schemas.BoolSchema
            isAdditionalEmailRequired = schemas.BoolSchema
            isPhoneNumberRequired = schemas.BoolSchema
            is_marketing_consent_required = schemas.BoolSchema
            alertEmail = schemas.StrSchema
        
            @staticmethod
            def orderedCustomFields() -> typing.Type['ProductCreateNewProductRequestOrderedCustomFields']:
                return ProductCreateNewProductRequestOrderedCustomFields
            typeOfProduct = schemas.Int32Schema
        
            @staticmethod
            def productCountryLimitation() -> typing.Type['ProductCreateNewProductRequestProductCountryLimitation']:
                return ProductCreateNewProductRequestProductCountryLimitation
            isAnyCountryAllowed = schemas.BoolSchema
            __annotations__ = {
                "description": description,
                "name": name,
                "visibility": visibility,
                "billingCurrency": billingCurrency,
                "displayName": displayName,
                "isShippingAddressRequired": isShippingAddressRequired,
                "isShippingAddressValidationRequired": isShippingAddressValidationRequired,
                "isBillingAddressValidationRequired": isBillingAddressValidationRequired,
                "isAdditionalEmailRequired": isAdditionalEmailRequired,
                "isPhoneNumberRequired": isPhoneNumberRequired,
                "is MarketingConsentRequired": is_marketing_consent_required,
                "alertEmail": alertEmail,
                "orderedCustomFields": orderedCustomFields,
                "typeOfProduct": typeOfProduct,
                "productCountryLimitation": productCountryLimitation,
                "isAnyCountryAllowed": isAnyCountryAllowed,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["description"]) -> MetaOapg.properties.description: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["name"]) -> MetaOapg.properties.name: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["visibility"]) -> MetaOapg.properties.visibility: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["billingCurrency"]) -> MetaOapg.properties.billingCurrency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["displayName"]) -> MetaOapg.properties.displayName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isShippingAddressRequired"]) -> MetaOapg.properties.isShippingAddressRequired: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isShippingAddressValidationRequired"]) -> MetaOapg.properties.isShippingAddressValidationRequired: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isBillingAddressValidationRequired"]) -> MetaOapg.properties.isBillingAddressValidationRequired: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isAdditionalEmailRequired"]) -> MetaOapg.properties.isAdditionalEmailRequired: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isPhoneNumberRequired"]) -> MetaOapg.properties.isPhoneNumberRequired: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["is MarketingConsentRequired"]) -> MetaOapg.properties.is_marketing_consent_required: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["alertEmail"]) -> MetaOapg.properties.alertEmail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["orderedCustomFields"]) -> 'ProductCreateNewProductRequestOrderedCustomFields': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["typeOfProduct"]) -> MetaOapg.properties.typeOfProduct: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["productCountryLimitation"]) -> 'ProductCreateNewProductRequestProductCountryLimitation': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isAnyCountryAllowed"]) -> MetaOapg.properties.isAnyCountryAllowed: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["description", "name", "visibility", "billingCurrency", "displayName", "isShippingAddressRequired", "isShippingAddressValidationRequired", "isBillingAddressValidationRequired", "isAdditionalEmailRequired", "isPhoneNumberRequired", "is MarketingConsentRequired", "alertEmail", "orderedCustomFields", "typeOfProduct", "productCountryLimitation", "isAnyCountryAllowed", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["description"]) -> typing.Union[MetaOapg.properties.description, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["name"]) -> typing.Union[MetaOapg.properties.name, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["visibility"]) -> typing.Union[MetaOapg.properties.visibility, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["billingCurrency"]) -> typing.Union[MetaOapg.properties.billingCurrency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["displayName"]) -> typing.Union[MetaOapg.properties.displayName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isShippingAddressRequired"]) -> typing.Union[MetaOapg.properties.isShippingAddressRequired, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isShippingAddressValidationRequired"]) -> typing.Union[MetaOapg.properties.isShippingAddressValidationRequired, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isBillingAddressValidationRequired"]) -> typing.Union[MetaOapg.properties.isBillingAddressValidationRequired, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isAdditionalEmailRequired"]) -> typing.Union[MetaOapg.properties.isAdditionalEmailRequired, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isPhoneNumberRequired"]) -> typing.Union[MetaOapg.properties.isPhoneNumberRequired, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["is MarketingConsentRequired"]) -> typing.Union[MetaOapg.properties.is_marketing_consent_required, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["alertEmail"]) -> typing.Union[MetaOapg.properties.alertEmail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["orderedCustomFields"]) -> typing.Union['ProductCreateNewProductRequestOrderedCustomFields', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["typeOfProduct"]) -> typing.Union[MetaOapg.properties.typeOfProduct, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["productCountryLimitation"]) -> typing.Union['ProductCreateNewProductRequestProductCountryLimitation', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isAnyCountryAllowed"]) -> typing.Union[MetaOapg.properties.isAnyCountryAllowed, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["description", "name", "visibility", "billingCurrency", "displayName", "isShippingAddressRequired", "isShippingAddressValidationRequired", "isBillingAddressValidationRequired", "isAdditionalEmailRequired", "isPhoneNumberRequired", "is MarketingConsentRequired", "alertEmail", "orderedCustomFields", "typeOfProduct", "productCountryLimitation", "isAnyCountryAllowed", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        description: typing.Union[MetaOapg.properties.description, str, schemas.Unset] = schemas.unset,
        name: typing.Union[MetaOapg.properties.name, str, schemas.Unset] = schemas.unset,
        visibility: typing.Union[MetaOapg.properties.visibility, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        billingCurrency: typing.Union[MetaOapg.properties.billingCurrency, str, schemas.Unset] = schemas.unset,
        displayName: typing.Union[MetaOapg.properties.displayName, str, schemas.Unset] = schemas.unset,
        isShippingAddressRequired: typing.Union[MetaOapg.properties.isShippingAddressRequired, bool, schemas.Unset] = schemas.unset,
        isShippingAddressValidationRequired: typing.Union[MetaOapg.properties.isShippingAddressValidationRequired, bool, schemas.Unset] = schemas.unset,
        isBillingAddressValidationRequired: typing.Union[MetaOapg.properties.isBillingAddressValidationRequired, bool, schemas.Unset] = schemas.unset,
        isAdditionalEmailRequired: typing.Union[MetaOapg.properties.isAdditionalEmailRequired, bool, schemas.Unset] = schemas.unset,
        isPhoneNumberRequired: typing.Union[MetaOapg.properties.isPhoneNumberRequired, bool, schemas.Unset] = schemas.unset,
        alertEmail: typing.Union[MetaOapg.properties.alertEmail, str, schemas.Unset] = schemas.unset,
        orderedCustomFields: typing.Union['ProductCreateNewProductRequestOrderedCustomFields', schemas.Unset] = schemas.unset,
        typeOfProduct: typing.Union[MetaOapg.properties.typeOfProduct, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        productCountryLimitation: typing.Union['ProductCreateNewProductRequestProductCountryLimitation', schemas.Unset] = schemas.unset,
        isAnyCountryAllowed: typing.Union[MetaOapg.properties.isAnyCountryAllowed, bool, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'ProductCreateNewProductRequest':
        return super().__new__(
            cls,
            *args,
            description=description,
            name=name,
            visibility=visibility,
            billingCurrency=billingCurrency,
            displayName=displayName,
            isShippingAddressRequired=isShippingAddressRequired,
            isShippingAddressValidationRequired=isShippingAddressValidationRequired,
            isBillingAddressValidationRequired=isBillingAddressValidationRequired,
            isAdditionalEmailRequired=isAdditionalEmailRequired,
            isPhoneNumberRequired=isPhoneNumberRequired,
            alertEmail=alertEmail,
            orderedCustomFields=orderedCustomFields,
            typeOfProduct=typeOfProduct,
            productCountryLimitation=productCountryLimitation,
            isAnyCountryAllowed=isAnyCountryAllowed,
            _configuration=_configuration,
            **kwargs,
        )

from billsby_python_sdk.model.product_create_new_product_request_ordered_custom_fields import ProductCreateNewProductRequestOrderedCustomFields
from billsby_python_sdk.model.product_create_new_product_request_product_country_limitation import ProductCreateNewProductRequestProductCountryLimitation
