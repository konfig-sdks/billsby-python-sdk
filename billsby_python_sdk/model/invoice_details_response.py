# coding: utf-8

"""
    Billsby API

    Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..

    The version of the OpenAPI document: 1.3.5
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from billsby_python_sdk import schemas  # noqa: F401


class InvoiceDetailsResponse(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            invoiceId = schemas.StrSchema
            customerEmail = schemas.StrSchema
            customerFirstName = schemas.StrSchema
            customerLastName = schemas.StrSchema
            customerUniqueId = schemas.StrSchema
            addressLine1 = schemas.StrSchema
            addressLine2 = schemas.StrSchema
            addressPostCode = schemas.StrSchema
            addressCity = schemas.StrSchema
            addressState = schemas.StrSchema
            addressCountry = schemas.StrSchema
            addressCountryCode = schemas.StrSchema
            invoiceNumber = schemas.StrSchema
            createdOn = schemas.StrSchema
            formattedAmount = schemas.StrSchema
            amount = schemas.StrSchema
            currency = schemas.StrSchema
            status = schemas.StrSchema
            subTotal = schemas.StrSchema
            taxTotal = schemas.StrSchema
            prorationAdjustment = schemas.StrSchema
            prorationFactor = schemas.AnyTypeSchema
        
            @staticmethod
            def taxes() -> typing.Type['InvoiceDetailsResponseTaxes']:
                return InvoiceDetailsResponseTaxes
            invoiceType = schemas.StrSchema
        
            @staticmethod
            def subscriptions() -> typing.Type['InvoiceDetailsResponseSubscriptions']:
                return InvoiceDetailsResponseSubscriptions
            companyName = schemas.StrSchema
            companyEmail = schemas.StrSchema
            companyTaxNumber = schemas.StrSchema
            companyDomain = schemas.StrSchema
            companyPhoneNumberDialCountry = schemas.StrSchema
            companyPhoneNumberDialCode = schemas.StrSchema
            companyPhoneNumber = schemas.StrSchema
            companyAddressLine1 = schemas.StrSchema
            companyAddressLine2 = schemas.StrSchema
            companyCity = schemas.StrSchema
            companyState = schemas.StrSchema
            companyPostCode = schemas.StrSchema
            companyCountry = schemas.StrSchema
            brandingLogo = schemas.StrSchema
            brandingLogoBackgroundColor = schemas.StrSchema
            brandingHighlightColor = schemas.StrSchema
            supportUrl = schemas.StrSchema
            cardType = schemas.StrSchema
            cardLast4Digits = schemas.StrSchema
            cardExpiryMonth = schemas.StrSchema
            cardExpiryYear = schemas.StrSchema
            refundableAmount = schemas.StrSchema
            footerCompanyName = schemas.StrSchema
            footerAddressLine1 = schemas.StrSchema
            footerAddressLine2 = schemas.StrSchema
            footerAddressState = schemas.StrSchema
            footerAddressCity = schemas.StrSchema
            footerAddressPostCode = schemas.StrSchema
            footerAddressCountryISO3 = schemas.StrSchema
            footerEmailAddress = schemas.StrSchema
            footerPhoneNumberDialCountry = schemas.StrSchema
            footerPhoneNumberDialCode = schemas.StrSchema
            footerPhoneNumber = schemas.StrSchema
            supportContactHeading = schemas.StrSchema
            supportContactContent = schemas.StrSchema
            supportContactSupportUrl = schemas.StrSchema
            supportContactSupportUrlButtonText = schemas.StrSchema
            isAdvertEnabled = schemas.StrSchema
            advertImageUrl = schemas.StrSchema
            advertLinkToUrl = schemas.StrSchema
            __annotations__ = {
                "invoiceId": invoiceId,
                "customerEmail": customerEmail,
                "customerFirstName": customerFirstName,
                "customerLastName": customerLastName,
                "customerUniqueId": customerUniqueId,
                "addressLine1": addressLine1,
                "addressLine2": addressLine2,
                "addressPostCode": addressPostCode,
                "addressCity": addressCity,
                "addressState": addressState,
                "addressCountry": addressCountry,
                "addressCountryCode": addressCountryCode,
                "invoiceNumber": invoiceNumber,
                "createdOn": createdOn,
                "formattedAmount": formattedAmount,
                "amount": amount,
                "currency": currency,
                "status": status,
                "subTotal": subTotal,
                "taxTotal": taxTotal,
                "prorationAdjustment": prorationAdjustment,
                "prorationFactor": prorationFactor,
                "taxes": taxes,
                "invoiceType": invoiceType,
                "subscriptions": subscriptions,
                "companyName": companyName,
                "companyEmail": companyEmail,
                "companyTaxNumber": companyTaxNumber,
                "companyDomain": companyDomain,
                "companyPhoneNumberDialCountry": companyPhoneNumberDialCountry,
                "companyPhoneNumberDialCode": companyPhoneNumberDialCode,
                "companyPhoneNumber": companyPhoneNumber,
                "companyAddressLine1": companyAddressLine1,
                "companyAddressLine2": companyAddressLine2,
                "companyCity": companyCity,
                "companyState": companyState,
                "companyPostCode": companyPostCode,
                "companyCountry": companyCountry,
                "brandingLogo": brandingLogo,
                "brandingLogoBackgroundColor": brandingLogoBackgroundColor,
                "brandingHighlightColor": brandingHighlightColor,
                "supportUrl": supportUrl,
                "cardType": cardType,
                "cardLast4Digits": cardLast4Digits,
                "cardExpiryMonth": cardExpiryMonth,
                "cardExpiryYear": cardExpiryYear,
                "refundableAmount": refundableAmount,
                "footerCompanyName": footerCompanyName,
                "footerAddressLine1": footerAddressLine1,
                "footerAddressLine2": footerAddressLine2,
                "footerAddressState": footerAddressState,
                "footerAddressCity": footerAddressCity,
                "footerAddressPostCode": footerAddressPostCode,
                "footerAddressCountryISO3": footerAddressCountryISO3,
                "footerEmailAddress": footerEmailAddress,
                "footerPhoneNumberDialCountry": footerPhoneNumberDialCountry,
                "footerPhoneNumberDialCode": footerPhoneNumberDialCode,
                "footerPhoneNumber": footerPhoneNumber,
                "supportContactHeading": supportContactHeading,
                "supportContactContent": supportContactContent,
                "supportContactSupportUrl": supportContactSupportUrl,
                "supportContactSupportUrlButtonText": supportContactSupportUrlButtonText,
                "isAdvertEnabled": isAdvertEnabled,
                "advertImageUrl": advertImageUrl,
                "advertLinkToUrl": advertLinkToUrl,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["invoiceId"]) -> MetaOapg.properties.invoiceId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customerEmail"]) -> MetaOapg.properties.customerEmail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customerFirstName"]) -> MetaOapg.properties.customerFirstName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customerLastName"]) -> MetaOapg.properties.customerLastName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["customerUniqueId"]) -> MetaOapg.properties.customerUniqueId: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressLine1"]) -> MetaOapg.properties.addressLine1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressLine2"]) -> MetaOapg.properties.addressLine2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressPostCode"]) -> MetaOapg.properties.addressPostCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressCity"]) -> MetaOapg.properties.addressCity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressState"]) -> MetaOapg.properties.addressState: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressCountry"]) -> MetaOapg.properties.addressCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["addressCountryCode"]) -> MetaOapg.properties.addressCountryCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["invoiceNumber"]) -> MetaOapg.properties.invoiceNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["createdOn"]) -> MetaOapg.properties.createdOn: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["formattedAmount"]) -> MetaOapg.properties.formattedAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["amount"]) -> MetaOapg.properties.amount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["currency"]) -> MetaOapg.properties.currency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["status"]) -> MetaOapg.properties.status: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subTotal"]) -> MetaOapg.properties.subTotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["taxTotal"]) -> MetaOapg.properties.taxTotal: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prorationAdjustment"]) -> MetaOapg.properties.prorationAdjustment: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["prorationFactor"]) -> MetaOapg.properties.prorationFactor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["taxes"]) -> 'InvoiceDetailsResponseTaxes': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["invoiceType"]) -> MetaOapg.properties.invoiceType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subscriptions"]) -> 'InvoiceDetailsResponseSubscriptions': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyName"]) -> MetaOapg.properties.companyName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyEmail"]) -> MetaOapg.properties.companyEmail: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyTaxNumber"]) -> MetaOapg.properties.companyTaxNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyDomain"]) -> MetaOapg.properties.companyDomain: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyPhoneNumberDialCountry"]) -> MetaOapg.properties.companyPhoneNumberDialCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyPhoneNumberDialCode"]) -> MetaOapg.properties.companyPhoneNumberDialCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyPhoneNumber"]) -> MetaOapg.properties.companyPhoneNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyAddressLine1"]) -> MetaOapg.properties.companyAddressLine1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyAddressLine2"]) -> MetaOapg.properties.companyAddressLine2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyCity"]) -> MetaOapg.properties.companyCity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyState"]) -> MetaOapg.properties.companyState: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyPostCode"]) -> MetaOapg.properties.companyPostCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["companyCountry"]) -> MetaOapg.properties.companyCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["brandingLogo"]) -> MetaOapg.properties.brandingLogo: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["brandingLogoBackgroundColor"]) -> MetaOapg.properties.brandingLogoBackgroundColor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["brandingHighlightColor"]) -> MetaOapg.properties.brandingHighlightColor: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supportUrl"]) -> MetaOapg.properties.supportUrl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cardType"]) -> MetaOapg.properties.cardType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cardLast4Digits"]) -> MetaOapg.properties.cardLast4Digits: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cardExpiryMonth"]) -> MetaOapg.properties.cardExpiryMonth: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["cardExpiryYear"]) -> MetaOapg.properties.cardExpiryYear: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["refundableAmount"]) -> MetaOapg.properties.refundableAmount: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerCompanyName"]) -> MetaOapg.properties.footerCompanyName: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerAddressLine1"]) -> MetaOapg.properties.footerAddressLine1: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerAddressLine2"]) -> MetaOapg.properties.footerAddressLine2: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerAddressState"]) -> MetaOapg.properties.footerAddressState: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerAddressCity"]) -> MetaOapg.properties.footerAddressCity: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerAddressPostCode"]) -> MetaOapg.properties.footerAddressPostCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerAddressCountryISO3"]) -> MetaOapg.properties.footerAddressCountryISO3: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerEmailAddress"]) -> MetaOapg.properties.footerEmailAddress: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerPhoneNumberDialCountry"]) -> MetaOapg.properties.footerPhoneNumberDialCountry: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerPhoneNumberDialCode"]) -> MetaOapg.properties.footerPhoneNumberDialCode: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["footerPhoneNumber"]) -> MetaOapg.properties.footerPhoneNumber: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supportContactHeading"]) -> MetaOapg.properties.supportContactHeading: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supportContactContent"]) -> MetaOapg.properties.supportContactContent: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supportContactSupportUrl"]) -> MetaOapg.properties.supportContactSupportUrl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["supportContactSupportUrlButtonText"]) -> MetaOapg.properties.supportContactSupportUrlButtonText: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["isAdvertEnabled"]) -> MetaOapg.properties.isAdvertEnabled: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["advertImageUrl"]) -> MetaOapg.properties.advertImageUrl: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["advertLinkToUrl"]) -> MetaOapg.properties.advertLinkToUrl: ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["invoiceId", "customerEmail", "customerFirstName", "customerLastName", "customerUniqueId", "addressLine1", "addressLine2", "addressPostCode", "addressCity", "addressState", "addressCountry", "addressCountryCode", "invoiceNumber", "createdOn", "formattedAmount", "amount", "currency", "status", "subTotal", "taxTotal", "prorationAdjustment", "prorationFactor", "taxes", "invoiceType", "subscriptions", "companyName", "companyEmail", "companyTaxNumber", "companyDomain", "companyPhoneNumberDialCountry", "companyPhoneNumberDialCode", "companyPhoneNumber", "companyAddressLine1", "companyAddressLine2", "companyCity", "companyState", "companyPostCode", "companyCountry", "brandingLogo", "brandingLogoBackgroundColor", "brandingHighlightColor", "supportUrl", "cardType", "cardLast4Digits", "cardExpiryMonth", "cardExpiryYear", "refundableAmount", "footerCompanyName", "footerAddressLine1", "footerAddressLine2", "footerAddressState", "footerAddressCity", "footerAddressPostCode", "footerAddressCountryISO3", "footerEmailAddress", "footerPhoneNumberDialCountry", "footerPhoneNumberDialCode", "footerPhoneNumber", "supportContactHeading", "supportContactContent", "supportContactSupportUrl", "supportContactSupportUrlButtonText", "isAdvertEnabled", "advertImageUrl", "advertLinkToUrl", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["invoiceId"]) -> typing.Union[MetaOapg.properties.invoiceId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customerEmail"]) -> typing.Union[MetaOapg.properties.customerEmail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customerFirstName"]) -> typing.Union[MetaOapg.properties.customerFirstName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customerLastName"]) -> typing.Union[MetaOapg.properties.customerLastName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["customerUniqueId"]) -> typing.Union[MetaOapg.properties.customerUniqueId, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressLine1"]) -> typing.Union[MetaOapg.properties.addressLine1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressLine2"]) -> typing.Union[MetaOapg.properties.addressLine2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressPostCode"]) -> typing.Union[MetaOapg.properties.addressPostCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressCity"]) -> typing.Union[MetaOapg.properties.addressCity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressState"]) -> typing.Union[MetaOapg.properties.addressState, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressCountry"]) -> typing.Union[MetaOapg.properties.addressCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["addressCountryCode"]) -> typing.Union[MetaOapg.properties.addressCountryCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["invoiceNumber"]) -> typing.Union[MetaOapg.properties.invoiceNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["createdOn"]) -> typing.Union[MetaOapg.properties.createdOn, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["formattedAmount"]) -> typing.Union[MetaOapg.properties.formattedAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["amount"]) -> typing.Union[MetaOapg.properties.amount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["currency"]) -> typing.Union[MetaOapg.properties.currency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["status"]) -> typing.Union[MetaOapg.properties.status, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subTotal"]) -> typing.Union[MetaOapg.properties.subTotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["taxTotal"]) -> typing.Union[MetaOapg.properties.taxTotal, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prorationAdjustment"]) -> typing.Union[MetaOapg.properties.prorationAdjustment, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["prorationFactor"]) -> typing.Union[MetaOapg.properties.prorationFactor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["taxes"]) -> typing.Union['InvoiceDetailsResponseTaxes', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["invoiceType"]) -> typing.Union[MetaOapg.properties.invoiceType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subscriptions"]) -> typing.Union['InvoiceDetailsResponseSubscriptions', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyName"]) -> typing.Union[MetaOapg.properties.companyName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyEmail"]) -> typing.Union[MetaOapg.properties.companyEmail, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyTaxNumber"]) -> typing.Union[MetaOapg.properties.companyTaxNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyDomain"]) -> typing.Union[MetaOapg.properties.companyDomain, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyPhoneNumberDialCountry"]) -> typing.Union[MetaOapg.properties.companyPhoneNumberDialCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyPhoneNumberDialCode"]) -> typing.Union[MetaOapg.properties.companyPhoneNumberDialCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyPhoneNumber"]) -> typing.Union[MetaOapg.properties.companyPhoneNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyAddressLine1"]) -> typing.Union[MetaOapg.properties.companyAddressLine1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyAddressLine2"]) -> typing.Union[MetaOapg.properties.companyAddressLine2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyCity"]) -> typing.Union[MetaOapg.properties.companyCity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyState"]) -> typing.Union[MetaOapg.properties.companyState, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyPostCode"]) -> typing.Union[MetaOapg.properties.companyPostCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["companyCountry"]) -> typing.Union[MetaOapg.properties.companyCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["brandingLogo"]) -> typing.Union[MetaOapg.properties.brandingLogo, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["brandingLogoBackgroundColor"]) -> typing.Union[MetaOapg.properties.brandingLogoBackgroundColor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["brandingHighlightColor"]) -> typing.Union[MetaOapg.properties.brandingHighlightColor, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supportUrl"]) -> typing.Union[MetaOapg.properties.supportUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cardType"]) -> typing.Union[MetaOapg.properties.cardType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cardLast4Digits"]) -> typing.Union[MetaOapg.properties.cardLast4Digits, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cardExpiryMonth"]) -> typing.Union[MetaOapg.properties.cardExpiryMonth, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["cardExpiryYear"]) -> typing.Union[MetaOapg.properties.cardExpiryYear, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["refundableAmount"]) -> typing.Union[MetaOapg.properties.refundableAmount, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerCompanyName"]) -> typing.Union[MetaOapg.properties.footerCompanyName, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerAddressLine1"]) -> typing.Union[MetaOapg.properties.footerAddressLine1, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerAddressLine2"]) -> typing.Union[MetaOapg.properties.footerAddressLine2, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerAddressState"]) -> typing.Union[MetaOapg.properties.footerAddressState, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerAddressCity"]) -> typing.Union[MetaOapg.properties.footerAddressCity, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerAddressPostCode"]) -> typing.Union[MetaOapg.properties.footerAddressPostCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerAddressCountryISO3"]) -> typing.Union[MetaOapg.properties.footerAddressCountryISO3, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerEmailAddress"]) -> typing.Union[MetaOapg.properties.footerEmailAddress, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerPhoneNumberDialCountry"]) -> typing.Union[MetaOapg.properties.footerPhoneNumberDialCountry, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerPhoneNumberDialCode"]) -> typing.Union[MetaOapg.properties.footerPhoneNumberDialCode, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["footerPhoneNumber"]) -> typing.Union[MetaOapg.properties.footerPhoneNumber, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supportContactHeading"]) -> typing.Union[MetaOapg.properties.supportContactHeading, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supportContactContent"]) -> typing.Union[MetaOapg.properties.supportContactContent, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supportContactSupportUrl"]) -> typing.Union[MetaOapg.properties.supportContactSupportUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["supportContactSupportUrlButtonText"]) -> typing.Union[MetaOapg.properties.supportContactSupportUrlButtonText, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["isAdvertEnabled"]) -> typing.Union[MetaOapg.properties.isAdvertEnabled, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["advertImageUrl"]) -> typing.Union[MetaOapg.properties.advertImageUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["advertLinkToUrl"]) -> typing.Union[MetaOapg.properties.advertLinkToUrl, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["invoiceId", "customerEmail", "customerFirstName", "customerLastName", "customerUniqueId", "addressLine1", "addressLine2", "addressPostCode", "addressCity", "addressState", "addressCountry", "addressCountryCode", "invoiceNumber", "createdOn", "formattedAmount", "amount", "currency", "status", "subTotal", "taxTotal", "prorationAdjustment", "prorationFactor", "taxes", "invoiceType", "subscriptions", "companyName", "companyEmail", "companyTaxNumber", "companyDomain", "companyPhoneNumberDialCountry", "companyPhoneNumberDialCode", "companyPhoneNumber", "companyAddressLine1", "companyAddressLine2", "companyCity", "companyState", "companyPostCode", "companyCountry", "brandingLogo", "brandingLogoBackgroundColor", "brandingHighlightColor", "supportUrl", "cardType", "cardLast4Digits", "cardExpiryMonth", "cardExpiryYear", "refundableAmount", "footerCompanyName", "footerAddressLine1", "footerAddressLine2", "footerAddressState", "footerAddressCity", "footerAddressPostCode", "footerAddressCountryISO3", "footerEmailAddress", "footerPhoneNumberDialCountry", "footerPhoneNumberDialCode", "footerPhoneNumber", "supportContactHeading", "supportContactContent", "supportContactSupportUrl", "supportContactSupportUrlButtonText", "isAdvertEnabled", "advertImageUrl", "advertLinkToUrl", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        invoiceId: typing.Union[MetaOapg.properties.invoiceId, str, schemas.Unset] = schemas.unset,
        customerEmail: typing.Union[MetaOapg.properties.customerEmail, str, schemas.Unset] = schemas.unset,
        customerFirstName: typing.Union[MetaOapg.properties.customerFirstName, str, schemas.Unset] = schemas.unset,
        customerLastName: typing.Union[MetaOapg.properties.customerLastName, str, schemas.Unset] = schemas.unset,
        customerUniqueId: typing.Union[MetaOapg.properties.customerUniqueId, str, schemas.Unset] = schemas.unset,
        addressLine1: typing.Union[MetaOapg.properties.addressLine1, str, schemas.Unset] = schemas.unset,
        addressLine2: typing.Union[MetaOapg.properties.addressLine2, str, schemas.Unset] = schemas.unset,
        addressPostCode: typing.Union[MetaOapg.properties.addressPostCode, str, schemas.Unset] = schemas.unset,
        addressCity: typing.Union[MetaOapg.properties.addressCity, str, schemas.Unset] = schemas.unset,
        addressState: typing.Union[MetaOapg.properties.addressState, str, schemas.Unset] = schemas.unset,
        addressCountry: typing.Union[MetaOapg.properties.addressCountry, str, schemas.Unset] = schemas.unset,
        addressCountryCode: typing.Union[MetaOapg.properties.addressCountryCode, str, schemas.Unset] = schemas.unset,
        invoiceNumber: typing.Union[MetaOapg.properties.invoiceNumber, str, schemas.Unset] = schemas.unset,
        createdOn: typing.Union[MetaOapg.properties.createdOn, str, schemas.Unset] = schemas.unset,
        formattedAmount: typing.Union[MetaOapg.properties.formattedAmount, str, schemas.Unset] = schemas.unset,
        amount: typing.Union[MetaOapg.properties.amount, str, schemas.Unset] = schemas.unset,
        currency: typing.Union[MetaOapg.properties.currency, str, schemas.Unset] = schemas.unset,
        status: typing.Union[MetaOapg.properties.status, str, schemas.Unset] = schemas.unset,
        subTotal: typing.Union[MetaOapg.properties.subTotal, str, schemas.Unset] = schemas.unset,
        taxTotal: typing.Union[MetaOapg.properties.taxTotal, str, schemas.Unset] = schemas.unset,
        prorationAdjustment: typing.Union[MetaOapg.properties.prorationAdjustment, str, schemas.Unset] = schemas.unset,
        prorationFactor: typing.Union[MetaOapg.properties.prorationFactor, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, bool, None, list, tuple, bytes, io.FileIO, io.BufferedReader, schemas.Unset] = schemas.unset,
        taxes: typing.Union['InvoiceDetailsResponseTaxes', schemas.Unset] = schemas.unset,
        invoiceType: typing.Union[MetaOapg.properties.invoiceType, str, schemas.Unset] = schemas.unset,
        subscriptions: typing.Union['InvoiceDetailsResponseSubscriptions', schemas.Unset] = schemas.unset,
        companyName: typing.Union[MetaOapg.properties.companyName, str, schemas.Unset] = schemas.unset,
        companyEmail: typing.Union[MetaOapg.properties.companyEmail, str, schemas.Unset] = schemas.unset,
        companyTaxNumber: typing.Union[MetaOapg.properties.companyTaxNumber, str, schemas.Unset] = schemas.unset,
        companyDomain: typing.Union[MetaOapg.properties.companyDomain, str, schemas.Unset] = schemas.unset,
        companyPhoneNumberDialCountry: typing.Union[MetaOapg.properties.companyPhoneNumberDialCountry, str, schemas.Unset] = schemas.unset,
        companyPhoneNumberDialCode: typing.Union[MetaOapg.properties.companyPhoneNumberDialCode, str, schemas.Unset] = schemas.unset,
        companyPhoneNumber: typing.Union[MetaOapg.properties.companyPhoneNumber, str, schemas.Unset] = schemas.unset,
        companyAddressLine1: typing.Union[MetaOapg.properties.companyAddressLine1, str, schemas.Unset] = schemas.unset,
        companyAddressLine2: typing.Union[MetaOapg.properties.companyAddressLine2, str, schemas.Unset] = schemas.unset,
        companyCity: typing.Union[MetaOapg.properties.companyCity, str, schemas.Unset] = schemas.unset,
        companyState: typing.Union[MetaOapg.properties.companyState, str, schemas.Unset] = schemas.unset,
        companyPostCode: typing.Union[MetaOapg.properties.companyPostCode, str, schemas.Unset] = schemas.unset,
        companyCountry: typing.Union[MetaOapg.properties.companyCountry, str, schemas.Unset] = schemas.unset,
        brandingLogo: typing.Union[MetaOapg.properties.brandingLogo, str, schemas.Unset] = schemas.unset,
        brandingLogoBackgroundColor: typing.Union[MetaOapg.properties.brandingLogoBackgroundColor, str, schemas.Unset] = schemas.unset,
        brandingHighlightColor: typing.Union[MetaOapg.properties.brandingHighlightColor, str, schemas.Unset] = schemas.unset,
        supportUrl: typing.Union[MetaOapg.properties.supportUrl, str, schemas.Unset] = schemas.unset,
        cardType: typing.Union[MetaOapg.properties.cardType, str, schemas.Unset] = schemas.unset,
        cardLast4Digits: typing.Union[MetaOapg.properties.cardLast4Digits, str, schemas.Unset] = schemas.unset,
        cardExpiryMonth: typing.Union[MetaOapg.properties.cardExpiryMonth, str, schemas.Unset] = schemas.unset,
        cardExpiryYear: typing.Union[MetaOapg.properties.cardExpiryYear, str, schemas.Unset] = schemas.unset,
        refundableAmount: typing.Union[MetaOapg.properties.refundableAmount, str, schemas.Unset] = schemas.unset,
        footerCompanyName: typing.Union[MetaOapg.properties.footerCompanyName, str, schemas.Unset] = schemas.unset,
        footerAddressLine1: typing.Union[MetaOapg.properties.footerAddressLine1, str, schemas.Unset] = schemas.unset,
        footerAddressLine2: typing.Union[MetaOapg.properties.footerAddressLine2, str, schemas.Unset] = schemas.unset,
        footerAddressState: typing.Union[MetaOapg.properties.footerAddressState, str, schemas.Unset] = schemas.unset,
        footerAddressCity: typing.Union[MetaOapg.properties.footerAddressCity, str, schemas.Unset] = schemas.unset,
        footerAddressPostCode: typing.Union[MetaOapg.properties.footerAddressPostCode, str, schemas.Unset] = schemas.unset,
        footerAddressCountryISO3: typing.Union[MetaOapg.properties.footerAddressCountryISO3, str, schemas.Unset] = schemas.unset,
        footerEmailAddress: typing.Union[MetaOapg.properties.footerEmailAddress, str, schemas.Unset] = schemas.unset,
        footerPhoneNumberDialCountry: typing.Union[MetaOapg.properties.footerPhoneNumberDialCountry, str, schemas.Unset] = schemas.unset,
        footerPhoneNumberDialCode: typing.Union[MetaOapg.properties.footerPhoneNumberDialCode, str, schemas.Unset] = schemas.unset,
        footerPhoneNumber: typing.Union[MetaOapg.properties.footerPhoneNumber, str, schemas.Unset] = schemas.unset,
        supportContactHeading: typing.Union[MetaOapg.properties.supportContactHeading, str, schemas.Unset] = schemas.unset,
        supportContactContent: typing.Union[MetaOapg.properties.supportContactContent, str, schemas.Unset] = schemas.unset,
        supportContactSupportUrl: typing.Union[MetaOapg.properties.supportContactSupportUrl, str, schemas.Unset] = schemas.unset,
        supportContactSupportUrlButtonText: typing.Union[MetaOapg.properties.supportContactSupportUrlButtonText, str, schemas.Unset] = schemas.unset,
        isAdvertEnabled: typing.Union[MetaOapg.properties.isAdvertEnabled, str, schemas.Unset] = schemas.unset,
        advertImageUrl: typing.Union[MetaOapg.properties.advertImageUrl, str, schemas.Unset] = schemas.unset,
        advertLinkToUrl: typing.Union[MetaOapg.properties.advertLinkToUrl, str, schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'InvoiceDetailsResponse':
        return super().__new__(
            cls,
            *args,
            invoiceId=invoiceId,
            customerEmail=customerEmail,
            customerFirstName=customerFirstName,
            customerLastName=customerLastName,
            customerUniqueId=customerUniqueId,
            addressLine1=addressLine1,
            addressLine2=addressLine2,
            addressPostCode=addressPostCode,
            addressCity=addressCity,
            addressState=addressState,
            addressCountry=addressCountry,
            addressCountryCode=addressCountryCode,
            invoiceNumber=invoiceNumber,
            createdOn=createdOn,
            formattedAmount=formattedAmount,
            amount=amount,
            currency=currency,
            status=status,
            subTotal=subTotal,
            taxTotal=taxTotal,
            prorationAdjustment=prorationAdjustment,
            prorationFactor=prorationFactor,
            taxes=taxes,
            invoiceType=invoiceType,
            subscriptions=subscriptions,
            companyName=companyName,
            companyEmail=companyEmail,
            companyTaxNumber=companyTaxNumber,
            companyDomain=companyDomain,
            companyPhoneNumberDialCountry=companyPhoneNumberDialCountry,
            companyPhoneNumberDialCode=companyPhoneNumberDialCode,
            companyPhoneNumber=companyPhoneNumber,
            companyAddressLine1=companyAddressLine1,
            companyAddressLine2=companyAddressLine2,
            companyCity=companyCity,
            companyState=companyState,
            companyPostCode=companyPostCode,
            companyCountry=companyCountry,
            brandingLogo=brandingLogo,
            brandingLogoBackgroundColor=brandingLogoBackgroundColor,
            brandingHighlightColor=brandingHighlightColor,
            supportUrl=supportUrl,
            cardType=cardType,
            cardLast4Digits=cardLast4Digits,
            cardExpiryMonth=cardExpiryMonth,
            cardExpiryYear=cardExpiryYear,
            refundableAmount=refundableAmount,
            footerCompanyName=footerCompanyName,
            footerAddressLine1=footerAddressLine1,
            footerAddressLine2=footerAddressLine2,
            footerAddressState=footerAddressState,
            footerAddressCity=footerAddressCity,
            footerAddressPostCode=footerAddressPostCode,
            footerAddressCountryISO3=footerAddressCountryISO3,
            footerEmailAddress=footerEmailAddress,
            footerPhoneNumberDialCountry=footerPhoneNumberDialCountry,
            footerPhoneNumberDialCode=footerPhoneNumberDialCode,
            footerPhoneNumber=footerPhoneNumber,
            supportContactHeading=supportContactHeading,
            supportContactContent=supportContactContent,
            supportContactSupportUrl=supportContactSupportUrl,
            supportContactSupportUrlButtonText=supportContactSupportUrlButtonText,
            isAdvertEnabled=isAdvertEnabled,
            advertImageUrl=advertImageUrl,
            advertLinkToUrl=advertLinkToUrl,
            _configuration=_configuration,
            **kwargs,
        )

from billsby_python_sdk.model.invoice_details_response_subscriptions import InvoiceDetailsResponseSubscriptions
from billsby_python_sdk.model.invoice_details_response_taxes import InvoiceDetailsResponseTaxes
