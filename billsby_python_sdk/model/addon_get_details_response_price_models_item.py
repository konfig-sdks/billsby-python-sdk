# coding: utf-8

"""
    Billsby API

    Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..

    The version of the OpenAPI document: 1.3.5
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from billsby_python_sdk import schemas  # noqa: F401


class AddonGetDetailsResponsePriceModelsItem(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
            frequency = schemas.IntSchema
            frequencyType = schemas.StrSchema
            currency = schemas.StrSchema
            flatFeePrice = schemas.IntSchema
            flatFeePriceFormatted = schemas.StrSchema
            perUnitPrice = schemas.IntSchema
            perUnitPriceFormatted = schemas.StrSchema
        
            @staticmethod
            def tiers() -> typing.Type['AddonGetDetailsResponsePriceModelsItemTiers']:
                return AddonGetDetailsResponsePriceModelsItemTiers
            __annotations__ = {
                "frequency": frequency,
                "frequencyType": frequencyType,
                "currency": currency,
                "flatFeePrice": flatFeePrice,
                "flatFeePriceFormatted": flatFeePriceFormatted,
                "perUnitPrice": perUnitPrice,
                "perUnitPriceFormatted": perUnitPriceFormatted,
                "tiers": tiers,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["frequency"]) -> MetaOapg.properties.frequency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["frequencyType"]) -> MetaOapg.properties.frequencyType: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["currency"]) -> MetaOapg.properties.currency: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["flatFeePrice"]) -> MetaOapg.properties.flatFeePrice: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["flatFeePriceFormatted"]) -> MetaOapg.properties.flatFeePriceFormatted: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perUnitPrice"]) -> MetaOapg.properties.perUnitPrice: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["perUnitPriceFormatted"]) -> MetaOapg.properties.perUnitPriceFormatted: ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tiers"]) -> 'AddonGetDetailsResponsePriceModelsItemTiers': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["frequency", "frequencyType", "currency", "flatFeePrice", "flatFeePriceFormatted", "perUnitPrice", "perUnitPriceFormatted", "tiers", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["frequency"]) -> typing.Union[MetaOapg.properties.frequency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["frequencyType"]) -> typing.Union[MetaOapg.properties.frequencyType, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["currency"]) -> typing.Union[MetaOapg.properties.currency, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["flatFeePrice"]) -> typing.Union[MetaOapg.properties.flatFeePrice, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["flatFeePriceFormatted"]) -> typing.Union[MetaOapg.properties.flatFeePriceFormatted, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perUnitPrice"]) -> typing.Union[MetaOapg.properties.perUnitPrice, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["perUnitPriceFormatted"]) -> typing.Union[MetaOapg.properties.perUnitPriceFormatted, schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tiers"]) -> typing.Union['AddonGetDetailsResponsePriceModelsItemTiers', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["frequency", "frequencyType", "currency", "flatFeePrice", "flatFeePriceFormatted", "perUnitPrice", "perUnitPriceFormatted", "tiers", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        frequency: typing.Union[MetaOapg.properties.frequency, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        frequencyType: typing.Union[MetaOapg.properties.frequencyType, str, schemas.Unset] = schemas.unset,
        currency: typing.Union[MetaOapg.properties.currency, str, schemas.Unset] = schemas.unset,
        flatFeePrice: typing.Union[MetaOapg.properties.flatFeePrice, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        flatFeePriceFormatted: typing.Union[MetaOapg.properties.flatFeePriceFormatted, str, schemas.Unset] = schemas.unset,
        perUnitPrice: typing.Union[MetaOapg.properties.perUnitPrice, decimal.Decimal, int, schemas.Unset] = schemas.unset,
        perUnitPriceFormatted: typing.Union[MetaOapg.properties.perUnitPriceFormatted, str, schemas.Unset] = schemas.unset,
        tiers: typing.Union['AddonGetDetailsResponsePriceModelsItemTiers', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'AddonGetDetailsResponsePriceModelsItem':
        return super().__new__(
            cls,
            *args,
            frequency=frequency,
            frequencyType=frequencyType,
            currency=currency,
            flatFeePrice=flatFeePrice,
            flatFeePriceFormatted=flatFeePriceFormatted,
            perUnitPrice=perUnitPrice,
            perUnitPriceFormatted=perUnitPriceFormatted,
            tiers=tiers,
            _configuration=_configuration,
            **kwargs,
        )

from billsby_python_sdk.model.addon_get_details_response_price_models_item_tiers import AddonGetDetailsResponsePriceModelsItemTiers
