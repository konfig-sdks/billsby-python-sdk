# coding: utf-8

"""
    Billsby API

    Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..

    The version of the OpenAPI document: 1.3.5
    Generated by: https://konfigthis.com
"""

from datetime import date, datetime  # noqa: F401
import decimal  # noqa: F401
import functools  # noqa: F401
import io  # noqa: F401
import re  # noqa: F401
import typing  # noqa: F401
import typing_extensions  # noqa: F401
import uuid  # noqa: F401

import frozendict  # noqa: F401

from billsby_python_sdk import schemas  # noqa: F401


class SubscriptionAddFeatureTagsRequest(
    schemas.DictSchema
):
    """
    This class is auto generated by Konfig (https://konfigthis.com)
    """


    class MetaOapg:
        
        class properties:
        
            @staticmethod
            def subscriptionUniqueIds() -> typing.Type['SubscriptionAddFeatureTagsRequestSubscriptionUniqueIds']:
                return SubscriptionAddFeatureTagsRequestSubscriptionUniqueIds
        
            @staticmethod
            def tagNames() -> typing.Type['SubscriptionAddFeatureTagsRequestTagNames']:
                return SubscriptionAddFeatureTagsRequestTagNames
            __annotations__ = {
                "subscriptionUniqueIds": subscriptionUniqueIds,
                "tagNames": tagNames,
            }
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["subscriptionUniqueIds"]) -> 'SubscriptionAddFeatureTagsRequestSubscriptionUniqueIds': ...
    
    @typing.overload
    def __getitem__(self, name: typing_extensions.Literal["tagNames"]) -> 'SubscriptionAddFeatureTagsRequestTagNames': ...
    
    @typing.overload
    def __getitem__(self, name: str) -> schemas.UnsetAnyTypeSchema: ...
    
    def __getitem__(self, name: typing.Union[typing_extensions.Literal["subscriptionUniqueIds", "tagNames", ], str]):
        # dict_instance[name] accessor
        return super().__getitem__(name)
    
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["subscriptionUniqueIds"]) -> typing.Union['SubscriptionAddFeatureTagsRequestSubscriptionUniqueIds', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: typing_extensions.Literal["tagNames"]) -> typing.Union['SubscriptionAddFeatureTagsRequestTagNames', schemas.Unset]: ...
    
    @typing.overload
    def get_item_oapg(self, name: str) -> typing.Union[schemas.UnsetAnyTypeSchema, schemas.Unset]: ...
    
    def get_item_oapg(self, name: typing.Union[typing_extensions.Literal["subscriptionUniqueIds", "tagNames", ], str]):
        return super().get_item_oapg(name)
    

    def __new__(
        cls,
        *args: typing.Union[dict, frozendict.frozendict, ],
        subscriptionUniqueIds: typing.Union['SubscriptionAddFeatureTagsRequestSubscriptionUniqueIds', schemas.Unset] = schemas.unset,
        tagNames: typing.Union['SubscriptionAddFeatureTagsRequestTagNames', schemas.Unset] = schemas.unset,
        _configuration: typing.Optional[schemas.Configuration] = None,
        **kwargs: typing.Union[schemas.AnyTypeSchema, dict, frozendict.frozendict, str, date, datetime, uuid.UUID, int, float, decimal.Decimal, None, list, tuple, bytes],
    ) -> 'SubscriptionAddFeatureTagsRequest':
        return super().__new__(
            cls,
            *args,
            subscriptionUniqueIds=subscriptionUniqueIds,
            tagNames=tagNames,
            _configuration=_configuration,
            **kwargs,
        )

from billsby_python_sdk.model.subscription_add_feature_tags_request_subscription_unique_ids import SubscriptionAddFeatureTagsRequestSubscriptionUniqueIds
from billsby_python_sdk.model.subscription_add_feature_tags_request_tag_names import SubscriptionAddFeatureTagsRequestTagNames
