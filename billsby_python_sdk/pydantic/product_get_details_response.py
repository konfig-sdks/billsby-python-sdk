# coding: utf-8

"""
    Billsby API

    Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..

    The version of the OpenAPI document: 1.3.5
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from billsby_python_sdk.pydantic.product_get_details_response_product_country_limitation import ProductGetDetailsResponseProductCountryLimitation

class ProductGetDetailsResponse(BaseModel):
    description: typing.Optional[str] = Field(None, alias='description')

    product_country_limitation: typing.Optional[ProductGetDetailsResponseProductCountryLimitation] = Field(None, alias='productCountryLimitation')

    product_id: typing.Optional[int] = Field(None, alias='productId')

    name: typing.Optional[str] = Field(None, alias='name')

    visibility: typing.Optional[int] = Field(None, alias='visibility')

    billing_currency: typing.Optional[str] = Field(None, alias='billingCurrency')

    billing_currency_template: typing.Optional[str] = Field(None, alias='billingCurrencyTemplate')

    display_name: typing.Optional[str] = Field(None, alias='displayName')

    type_of_product: typing.Optional[int] = Field(None, alias='typeOfProduct')

    has_plans: typing.Optional[bool] = Field(None, alias='hasPlans')

    is_shipping_address_required: typing.Optional[bool] = Field(None, alias='isShippingAddressRequired')

    is_shipping_address_validation_required: typing.Optional[bool] = Field(None, alias='isShippingAddressValidationRequired')

    is_billing_address_validation_required: typing.Optional[bool] = Field(None, alias='isBillingAddressValidationRequired')

    is_additional_email_required: typing.Optional[bool] = Field(None, alias='isAdditionalEmailRequired')

    is_phone_number_required: typing.Optional[bool] = Field(None, alias='isPhoneNumberRequired')

    is_marketing_consent_required: typing.Optional[bool] = Field(None, alias='isMarketingConsentRequired')

    number_of_plans: typing.Optional[int] = Field(None, alias='numberOfPlans')

    alert_email: typing.Optional[str] = Field(None, alias='alertEmail')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
