# coding: utf-8

"""
    Billsby API

    Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..

    The version of the OpenAPI document: 1.3.5
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict


class SubscriptionUpdateShippingAddressRequest(BaseModel):
    # The first line of the new address that you want to update to
    address_line1: typing.Optional[str] = Field(None, alias='addressLine1')

    # The second line of the new address that you want to update to
    address_line2: typing.Optional[str] = Field(None, alias='addressLine2')

    # The state of the new address that you want to update to
    state: typing.Optional[str] = Field(None, alias='state')

    # The city of the new address that you want to update to
    city: typing.Optional[str] = Field(None, alias='city')

    # The country of the new address that you wish to change to
    country: typing.Optional[str] = Field(None, alias='country')

    # The post code of the new address that you want to update to
    post_code: typing.Optional[str] = Field(None, alias='postCode')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
