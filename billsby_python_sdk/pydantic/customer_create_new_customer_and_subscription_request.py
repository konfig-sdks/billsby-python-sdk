# coding: utf-8

"""
    Billsby API

    Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..

    The version of the OpenAPI document: 1.3.5
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from billsby_python_sdk.pydantic.customer_create_new_customer_and_subscription_request_add_ons import CustomerCreateNewCustomerAndSubscriptionRequestAddOns
from billsby_python_sdk.pydantic.customer_create_new_customer_and_subscription_request_address import CustomerCreateNewCustomerAndSubscriptionRequestAddress
from billsby_python_sdk.pydantic.customer_create_new_customer_and_subscription_request_allowances import CustomerCreateNewCustomerAndSubscriptionRequestAllowances
from billsby_python_sdk.pydantic.customer_create_new_customer_and_subscription_request_card_details import CustomerCreateNewCustomerAndSubscriptionRequestCardDetails
from billsby_python_sdk.pydantic.customer_create_new_customer_and_subscription_request_coupon_codes import CustomerCreateNewCustomerAndSubscriptionRequestCouponCodes
from billsby_python_sdk.pydantic.customer_create_new_customer_and_subscription_request_custom_field_response import CustomerCreateNewCustomerAndSubscriptionRequestCustomFieldResponse
from billsby_python_sdk.pydantic.customer_create_new_customer_and_subscription_request_shipping_address import CustomerCreateNewCustomerAndSubscriptionRequestShippingAddress

class CustomerCreateNewCustomerAndSubscriptionRequest(BaseModel):
    # The customer's first name
    first_name: str = Field(alias='firstName')

    # The customer's last name
    last_name: str = Field(alias='lastName')

    # The customer's email address
    email: str = Field(alias='email')

    # The unique identifier of the cycle in Billsby
    cycle_id: int = Field(alias='cycleId')

    # The number of units included in the subscription (min. 1)
    units: int = Field(alias='Units')

    address: CustomerCreateNewCustomerAndSubscriptionRequestAddress = Field(alias='address')

    card_details: CustomerCreateNewCustomerAndSubscriptionRequestCardDetails = Field(alias='cardDetails')

    shipping_address: typing.Optional[CustomerCreateNewCustomerAndSubscriptionRequestShippingAddress] = Field(None, alias='shippingAddress')

    # Any additional email address provided by the customer
    additional_email: typing.Optional[str] = Field(None, alias='additionalEmail')

    # The country associated with their phone number
    phone_number_dial_country: typing.Optional[str] = Field(None, alias='phoneNumberDialCountry')

    # The country code associated with their phone number
    phone_number_dial_code: typing.Optional[int] = Field(None, alias='phoneNumberDialCode')

    # The customer's phone number. If phoneNumber is provided, then phoneNumberDialCountry and phoneNumberDialCode are required.
    phone_number: typing.Optional[int] = Field(None, alias='phoneNumber')

    # Has the customer given marketing consent; true or false
    marketing_consent: typing.Optional[bool] = Field(None, alias='marketingConsent')

    custom_field_response: typing.Optional[CustomerCreateNewCustomerAndSubscriptionRequestCustomFieldResponse] = Field(None, alias='customFieldResponse')

    add_ons: typing.Optional[CustomerCreateNewCustomerAndSubscriptionRequestAddOns] = Field(None, alias='addOns')

    allowances: typing.Optional[CustomerCreateNewCustomerAndSubscriptionRequestAllowances] = Field(None, alias='allowances')

    coupon_codes: typing.Optional[CustomerCreateNewCustomerAndSubscriptionRequestCouponCodes] = Field(None, alias='couponCodes')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
