# coding: utf-8

"""
    Billsby API

    Billsby is a feature-rich \"Saas\" recurring payment platform, ranked as the leading subscription billing software by G2.  Billsby is designed to ensure customers can go live quickly, often within 1-2 hours.  To help facilitate this process we have a team of friendly knowledgeable advisors ready to help your business go live.      Billsby specializes in providing great customer service at an affordable price point - our technology is rated No 1 on G2 by our customers.  If you are a developer creating a solution for your customer, Billsby has a friendly well-documented API.  The Billsby team are here to provide support to developers in order to ensure a smooth migration or new system build.   Why not book a call, talk through your Billing requirements and we can let you know how we can help you transform your business..

    The version of the OpenAPI document: 1.3.5
    Generated by: https://konfigthis.com
"""

from datetime import datetime, date
import typing
from enum import Enum
from typing_extensions import TypedDict, Literal, TYPE_CHECKING
from pydantic import BaseModel, Field, RootModel, ConfigDict

from billsby_python_sdk.pydantic.customer_get_details_response_billing_address import CustomerGetDetailsResponseBillingAddress

class CustomerGetDetailsResponse(BaseModel):
    company_currency: typing.Optional[str] = Field(None, alias='companyCurrency')

    total_amount_paid: typing.Optional[str] = Field(None, alias='totalAmountPaid')

    average_amount_per_month: typing.Optional[str] = Field(None, alias='averageAmountPerMonth')

    card_status: typing.Optional[str] = Field(None, alias='cardStatus')

    customer_unique_id: typing.Optional[str] = Field(None, alias='customerUniqueId')

    first_name: typing.Optional[str] = Field(None, alias='firstName')

    last_name: typing.Optional[str] = Field(None, alias='lastName')

    billing_address: typing.Optional[CustomerGetDetailsResponseBillingAddress] = Field(None, alias='billingAddress')

    email: typing.Optional[str] = Field(None, alias='email')

    additional_email: typing.Optional[str] = Field(None, alias='additionalEmail')

    phone_number_dial_country: typing.Optional[str] = Field(None, alias='phoneNumberDialCountry')

    phone_number_dial_code: typing.Optional[str] = Field(None, alias='phoneNumberDialCode')

    phone_number: typing.Optional[str] = Field(None, alias='phoneNumber')

    is_marketing_consent_given: typing.Optional[bool] = Field(None, alias='isMarketingConsentGiven')

    created_on: typing.Optional[str] = Field(None, alias='createdOn')

    status: typing.Optional[str] = Field(None, alias='status')

    model_config = ConfigDict(
        protected_namespaces=(),
        arbitrary_types_allowed=True
    )
